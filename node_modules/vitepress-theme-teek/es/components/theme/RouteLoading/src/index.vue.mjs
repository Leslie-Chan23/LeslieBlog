import { ref, onBeforeMount, onMounted, renderSlot, createElementVNode, normalizeClass, unref, withDirectives, toDisplayString, vShow } from 'vue';
import { isString } from '../../../../helper/dist/index.mjs';
import 'vitepress';
import { useNamespace } from '../../../../composables/useNamespace.mjs';
import { useVpRouter } from '../../../../composables/useVpRouter.mjs';
import '../../../../composables/useZIndex.mjs';
import { useTeekConfig } from '../../ConfigProvider/index.mjs';

const _sfc_main = {
  __name: "index",
  setup(__props) {
    const loading = ref(false);
    const ns = useNamespace("route-loading");
    const vpRouter = useVpRouter();
    const { getTeekConfigRef } = useTeekConfig();
    const loadingConfig = getTeekConfigRef("loading", true);
    vpRouter.bindBeforeRouteChange("routeLoadingBefore", () => {
      handleRouteStart();
    });
    vpRouter.bindAfterRouteChange("routeLoadingAfter", () => {
      handleRouteComplete();
    });
    const handleRouteStart = () => loading.value = true;
    const handleRouteComplete = () => loading.value = false;
    onBeforeMount(() => {
      handleRouteStart();
    });
    onMounted(() => {
      setTimeout(handleRouteComplete, 100);
    });
    return (_ctx, _cache) => {
      return renderSlot(_ctx.$slots, "default", { loading: loading.value }, () => [
        createElementVNode(
          "div",
          {
            class: normalizeClass(unref(ns).b())
          },
          [
            withDirectives(createElementVNode(
              "div",
              {
                class: normalizeClass(unref(ns).e("mask"))
              },
              [
                createElementVNode(
                  "div",
                  {
                    class: normalizeClass(unref(ns).e("loader"))
                  },
                  [
                    createElementVNode(
                      "div",
                      {
                        class: normalizeClass(unref(ns).e("spinner"))
                      },
                      null,
                      2
                      /* CLASS */
                    ),
                    createElementVNode(
                      "p",
                      null,
                      toDisplayString(unref(isString)(unref(loadingConfig)) ? unref(loadingConfig) : "Teek \u62FC\u547D\u52A0\u8F7D\u4E2D ..."),
                      1
                      /* TEXT */
                    )
                  ],
                  2
                  /* CLASS */
                )
              ],
              2
              /* CLASS */
            ), [
              [vShow, loading.value]
            ])
          ],
          2
          /* CLASS */
        )
      ]);
    };
  }
};

export { _sfc_main as default };
