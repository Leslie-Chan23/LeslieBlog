'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var index$1 = require('../../../../helper/dist/index.js');
require('vitepress');
var useNamespace = require('../../../../composables/useNamespace.js');
var useVpRouter = require('../../../../composables/useVpRouter.js');
require('../../../../composables/useZIndex.js');
var index = require('../../ConfigProvider/index.js');

const _sfc_main = {
  __name: "index",
  setup(__props) {
    const loading = Vue.ref(false);
    const ns = useNamespace.useNamespace("route-loading");
    const vpRouter = useVpRouter.useVpRouter();
    const { getTeekConfigRef } = index.useTeekConfig();
    const loadingConfig = getTeekConfigRef("loading", true);
    vpRouter.bindBeforeRouteChange("routeLoadingBefore", () => {
      handleRouteStart();
    });
    vpRouter.bindAfterRouteChange("routeLoadingAfter", () => {
      handleRouteComplete();
    });
    const handleRouteStart = () => loading.value = true;
    const handleRouteComplete = () => loading.value = false;
    Vue.onBeforeMount(() => {
      handleRouteStart();
    });
    Vue.onMounted(() => {
      setTimeout(handleRouteComplete, 100);
    });
    return (_ctx, _cache) => {
      return Vue.renderSlot(_ctx.$slots, "default", { loading: loading.value }, () => [
        Vue.createElementVNode(
          "div",
          {
            class: Vue.normalizeClass(Vue.unref(ns).b())
          },
          [
            Vue.withDirectives(Vue.createElementVNode(
              "div",
              {
                class: Vue.normalizeClass(Vue.unref(ns).e("mask"))
              },
              [
                Vue.createElementVNode(
                  "div",
                  {
                    class: Vue.normalizeClass(Vue.unref(ns).e("loader"))
                  },
                  [
                    Vue.createElementVNode(
                      "div",
                      {
                        class: Vue.normalizeClass(Vue.unref(ns).e("spinner"))
                      },
                      null,
                      2
                      /* CLASS */
                    ),
                    Vue.createElementVNode(
                      "p",
                      null,
                      Vue.toDisplayString(Vue.unref(index$1.isString)(Vue.unref(loadingConfig)) ? Vue.unref(loadingConfig) : "Teek \u62FC\u547D\u52A0\u8F7D\u4E2D ..."),
                      1
                      /* TEXT */
                    )
                  ],
                  2
                  /* CLASS */
                )
              ],
              2
              /* CLASS */
            ), [
              [Vue.vShow, loading.value]
            ])
          ],
          2
          /* CLASS */
        )
      ]);
    };
  }
};

exports.default = _sfc_main;
